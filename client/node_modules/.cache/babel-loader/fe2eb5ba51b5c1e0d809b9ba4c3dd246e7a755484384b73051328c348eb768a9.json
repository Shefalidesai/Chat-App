{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\CHATAPPGRAPH\\\\client\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ApolloClient, InMemoryCache, useMutation, useSubscription, gql } from '@apollo/client';\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { Container, Chip, Grid, TextField, Button } from \"@mui/material\";\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { styled } from '@mui/system';\n\n// Create a dark theme\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark' // Set the palette mode to dark\n  }\n});\n\nconst StyledTextField = styled(TextField)({\n  '& label': {\n    color: 'white' // Customize label color\n  },\n\n  '& input': {\n    color: 'white' // Customize input text color\n  }\n});\n\nconst link = new WebSocketLink({\n  uri: `ws://localhost:4000/`,\n  options: {\n    reconnect: true\n  }\n});\nexport const client = new ApolloClient({\n  link,\n  uri: 'http://localhost:4000/',\n  //connect to server\n  cache: new InMemoryCache()\n});\nconst GET_MESSAGES = gql`\n  subscription {\n    messages {\n      id\n      user\n      text\n    }\n  }\n`;\nconst POST_MESSAGE = gql`\n  mutation($user:String!, $text:String!){\n    postMessage(user:$user,text:$text)\n  }\n`;\nconst Messages = ({\n  user\n}) => {\n  _s();\n  const {\n    data\n  } = useSubscription(GET_MESSAGES);\n  if (!data) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"5rem\"\n    },\n    children: data.messages.map(({\n      id,\n      user: messageUser,\n      text\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: user === messageUser ? \"right\" : \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginBottom: \"0.3rem\"\n          },\n          children: messageUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          style: {\n            fontSize: \"0.9rem\"\n          },\n          color: user === messageUser ? \"primary\" : \"secondary\",\n          label: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n};\n_s(Messages, \"jGHc0WefjsMFLs0A+zkjAgiY5yc=\", false, function () {\n  return [useSubscription];\n});\n_c = Messages;\nexport const Chat = () => {\n  _s2();\n  const [user, setUser] = useState(\"Shefali\");\n  const [text, setText] = useState(\"\");\n  const [postMessage] = useMutation(POST_MESSAGE);\n  const sendMessage = () => {\n    if (text.length > 0 && user.length > 0) {\n      postMessage({\n        variables: {\n          user: user,\n          text: text\n        }\n      });\n      setText(\"\");\n    } else {\n      alert(\"Missing fields!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Messages, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        style: {\n          color: \"white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => {\n            setUser(e.target.value);\n          },\n          value: user,\n          size: \"small\",\n          fullWidth: true,\n          variant: \"outlined\",\n          required: true,\n          label: \"Required\",\n          style: {\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => {\n            setText(e.target.value);\n          },\n          value: text,\n          size: \"small\",\n          fullWidth: true,\n          variant: \"outlined\",\n          required: true,\n          label: \"Required\",\n          style: {\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: sendMessage,\n          fullWidth: true,\n          variant: \"contained\",\n          style: {\n            backgroundColor: \"#60a820\",\n            color: \"white\"\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s2(Chat, \"ay+Ef0I7sXrGP3iHJP9im2wCb04=\", false, function () {\n  return [useMutation];\n});\n_c2 = Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"Messages\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useState","ApolloClient","InMemoryCache","useMutation","useSubscription","gql","WebSocketLink","Container","Chip","Grid","TextField","Button","createTheme","ThemeProvider","styled","jsxDEV","_jsxDEV","darkTheme","palette","mode","StyledTextField","color","link","uri","options","reconnect","client","cache","GET_MESSAGES","POST_MESSAGE","Messages","user","_s","data","style","marginBottom","children","messages","map","id","messageUser","text","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","label","_c","Chat","_s2","setUser","setText","postMessage","sendMessage","length","variables","alert","container","spacing","item","xs","onChange","e","target","value","size","fullWidth","variant","required","onClick","backgroundColor","_c2","$RefreshReg$"],"sources":["C:/REACT/CHATAPPGRAPH/client/src/Chat.js"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport { ApolloClient, InMemoryCache, useMutation, useSubscription, gql} from '@apollo/client';\r\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\r\nimport {Container, Chip, Grid, TextField, Button} from \"@mui/material\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { styled } from '@mui/system';\r\n\r\n// Create a dark theme\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark', // Set the palette mode to dark\r\n  },\r\n});\r\nconst StyledTextField = styled(TextField)({\r\n  '& label': {\r\n    color: 'white', // Customize label color\r\n  },\r\n  '& input': {\r\n    color: 'white', // Customize input text color\r\n  },\r\n});\r\n\r\nconst link = new WebSocketLink({\r\n    uri: `ws://localhost:4000/`,\r\n    options: {\r\n      reconnect: true,\r\n    },\r\n});\r\n\r\n\r\nexport const client = new ApolloClient({\r\n  link,\r\n  uri: 'http://localhost:4000/', //connect to server\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\n\r\nconst GET_MESSAGES = gql`\r\n  subscription {\r\n    messages {\r\n      id\r\n      user\r\n      text\r\n    }\r\n  }\r\n`;\r\n\r\nconst POST_MESSAGE = gql`\r\n  mutation($user:String!, $text:String!){\r\n    postMessage(user:$user,text:$text)\r\n  }\r\n`;\r\n\r\nconst Messages = ({user}) =>{\r\n    const {data} = useSubscription(GET_MESSAGES)\r\n    if(!data){\r\n        return null;\r\n    }\r\n    return (\r\n      <div style={{marginBottom:\"5rem\"}}>\r\n        {data.messages.map(({id, user:messageUser, text})=>{\r\n          return(\r\n            <div key={id} style={{textAlign: user===messageUser?\"right\":\"left\"}}>\r\n              <p style={{marginBottom:\"0.3rem\"}}>{messageUser}</p>\r\n              <Chip style={{fontSize:\"0.9rem\"}} color={user===messageUser?\"primary\": \"secondary\"} label={text}/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n     )\r\n}\r\n\r\nexport const Chat = () =>{\r\n    const [user, setUser] = useState(\"Shefali\");\r\n    const [text, setText] = useState(\"\");\r\n    const [postMessage] = useMutation(POST_MESSAGE)\r\n    const sendMessage=()=>{\r\n      if(text.length>0 && user.length >0){\r\n        postMessage({\r\n          variables:{\r\n            user: user,\r\n            text: text\r\n          }\r\n        })\r\n        setText(\"\");\r\n      }else{\r\n        alert(\"Missing fields!\")\r\n      }\r\n      \r\n    }\r\n    \r\n    return(\r\n      \r\n        <Container >\r\n          <Messages user={user}/>\r\n          <Grid container spacing={2} style={{color:\"white\"}}>\r\n            <Grid item xs={3} style={{color:\"white\"}}>\r\n              <TextField onChange={(e)=>{\r\n                setUser(e.target.value)}} value={user} size=\"small\" fullWidth variant=\"outlined\" required label=\"Required\" style={{color:\"white\"}} />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField onChange={(e)=>{\r\n                setText(e.target.value)}} value={text} size=\"small\" fullWidth variant=\"outlined\" required label=\"Required\" style={{color:\"white\"}}/>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <Button onClick={sendMessage} fullWidth  variant=\"contained\" style={{backgroundColor:\"#60a820\", color:\"white\"}}>Send</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,SAASC,YAAY,EAAEC,aAAa,EAAEC,WAAW,EAAEC,eAAe,EAAEC,GAAG,QAAO,gBAAgB;AAC9F,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAAQC,SAAS,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,MAAM,QAAO,eAAe;AACtE,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAASC,MAAM,QAAQ,aAAa;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,OAAO,EAAE;IACPC,IAAI,EAAE,MAAM,CAAE;EAChB;AACF,CAAC,CAAC;;AACF,MAAMC,eAAe,GAAGN,MAAM,CAACJ,SAAS,CAAC,CAAC;EACxC,SAAS,EAAE;IACTW,KAAK,EAAE,OAAO,CAAE;EAClB,CAAC;;EACD,SAAS,EAAE;IACTA,KAAK,EAAE,OAAO,CAAE;EAClB;AACF,CAAC,CAAC;;AAEF,MAAMC,IAAI,GAAG,IAAIhB,aAAa,CAAC;EAC3BiB,GAAG,EAAG,sBAAqB;EAC3BC,OAAO,EAAE;IACPC,SAAS,EAAE;EACb;AACJ,CAAC,CAAC;AAGF,OAAO,MAAMC,MAAM,GAAG,IAAIzB,YAAY,CAAC;EACrCqB,IAAI;EACJC,GAAG,EAAE,wBAAwB;EAAE;EAC/BI,KAAK,EAAE,IAAIzB,aAAa,CAAC;AAC3B,CAAC,CAAC;AAGF,MAAM0B,YAAY,GAAGvB,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMwB,YAAY,GAAGxB,GAAI;AACzB;AACA;AACA;AACA,CAAC;AAED,MAAMyB,QAAQ,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAI;EAAAC,EAAA;EACxB,MAAM;IAACC;EAAI,CAAC,GAAG7B,eAAe,CAACwB,YAAY,CAAC;EAC5C,IAAG,CAACK,IAAI,EAAC;IACL,OAAO,IAAI;EACf;EACA,oBACEjB,OAAA;IAAKkB,KAAK,EAAE;MAACC,YAAY,EAAC;IAAM,CAAE;IAAAC,QAAA,EAC/BH,IAAI,CAACI,QAAQ,CAACC,GAAG,CAAC,CAAC;MAACC,EAAE;MAAER,IAAI,EAACS,WAAW;MAAEC;IAAI,CAAC,KAAG;MACjD,oBACEzB,OAAA;QAAckB,KAAK,EAAE;UAACQ,SAAS,EAAEX,IAAI,KAAGS,WAAW,GAAC,OAAO,GAAC;QAAM,CAAE;QAAAJ,QAAA,gBAClEpB,OAAA;UAAGkB,KAAK,EAAE;YAACC,YAAY,EAAC;UAAQ,CAAE;UAAAC,QAAA,EAAEI;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpD9B,OAAA,CAACR,IAAI;UAAC0B,KAAK,EAAE;YAACa,QAAQ,EAAC;UAAQ,CAAE;UAAC1B,KAAK,EAAEU,IAAI,KAAGS,WAAW,GAAC,SAAS,GAAE,WAAY;UAACQ,KAAK,EAAEP;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA,GAF1FP,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGP,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ,CAAC;AAAAd,EAAA,CAjBKF,QAAQ;EAAA,QACK1B,eAAe;AAAA;AAAA6C,EAAA,GAD5BnB,QAAQ;AAmBd,OAAO,MAAMoB,IAAI,GAAGA,CAAA,KAAK;EAAAC,GAAA;EACrB,MAAM,CAACpB,IAAI,EAAEqB,OAAO,CAAC,GAAGpD,QAAQ,CAAC,SAAS,CAAC;EAC3C,MAAM,CAACyC,IAAI,EAAEY,OAAO,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACsD,WAAW,CAAC,GAAGnD,WAAW,CAAC0B,YAAY,CAAC;EAC/C,MAAM0B,WAAW,GAACA,CAAA,KAAI;IACpB,IAAGd,IAAI,CAACe,MAAM,GAAC,CAAC,IAAIzB,IAAI,CAACyB,MAAM,GAAE,CAAC,EAAC;MACjCF,WAAW,CAAC;QACVG,SAAS,EAAC;UACR1B,IAAI,EAAEA,IAAI;UACVU,IAAI,EAAEA;QACR;MACF,CAAC,CAAC;MACFY,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,MAAI;MACHK,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EAEF,CAAC;EAED,oBAEI1C,OAAA,CAACT,SAAS;IAAA6B,QAAA,gBACRpB,OAAA,CAACc,QAAQ;MAACC,IAAI,EAAEA;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvB9B,OAAA,CAACP,IAAI;MAACkD,SAAS;MAACC,OAAO,EAAE,CAAE;MAAC1B,KAAK,EAAE;QAACb,KAAK,EAAC;MAAO,CAAE;MAAAe,QAAA,gBACjDpB,OAAA,CAACP,IAAI;QAACoD,IAAI;QAACC,EAAE,EAAE,CAAE;QAAC5B,KAAK,EAAE;UAACb,KAAK,EAAC;QAAO,CAAE;QAAAe,QAAA,eACvCpB,OAAA,CAACN,SAAS;UAACqD,QAAQ,EAAGC,CAAC,IAAG;YACxBZ,OAAO,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;UAAA,CAAE;UAACA,KAAK,EAAEnC,IAAK;UAACoC,IAAI,EAAC,OAAO;UAACC,SAAS;UAACC,OAAO,EAAC,UAAU;UAACC,QAAQ;UAACtB,KAAK,EAAC,UAAU;UAACd,KAAK,EAAE;YAACb,KAAK,EAAC;UAAO;QAAE;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnI,CAAC,eACP9B,OAAA,CAACP,IAAI;QAACoD,IAAI;QAACC,EAAE,EAAE,CAAE;QAAA1B,QAAA,eACfpB,OAAA,CAACN,SAAS;UAACqD,QAAQ,EAAGC,CAAC,IAAG;YACxBX,OAAO,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;UAAA,CAAE;UAACA,KAAK,EAAEzB,IAAK;UAAC0B,IAAI,EAAC,OAAO;UAACC,SAAS;UAACC,OAAO,EAAC,UAAU;UAACC,QAAQ;UAACtB,KAAK,EAAC,UAAU;UAACd,KAAK,EAAE;YAACb,KAAK,EAAC;UAAO;QAAE;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClI,CAAC,eACP9B,OAAA,CAACP,IAAI;QAACoD,IAAI;QAACC,EAAE,EAAE,CAAE;QAAA1B,QAAA,eACfpB,OAAA,CAACL,MAAM;UAAC4D,OAAO,EAAEhB,WAAY;UAACa,SAAS;UAAEC,OAAO,EAAC,WAAW;UAACnC,KAAK,EAAE;YAACsC,eAAe,EAAC,SAAS;YAAEnD,KAAK,EAAC;UAAO,CAAE;UAAAe,QAAA,EAAC;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEpB,CAAC;AAAAK,GAAA,CAtCYD,IAAI;EAAA,QAGS/C,WAAW;AAAA;AAAAsE,GAAA,GAHxBvB,IAAI;AAAA,IAAAD,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}